AWSTemplateFormatVersion: "2010-09-09"
Description: "Prowler Infrastructure - VPC, EC2, IAM Role, and Security Group"

Parameters:
  ProjectName:
    Type: String
    Default: prowler
    Description: Project name for resource naming

  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - stag
      - prod
    Description: Environment for resource naming

  AllowedCIDR:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR block allowed for port 80 access
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[12][0-9]|[0-9]))$

  InstanceSize:
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.medium
      - t3a.medium
      - t2.medium
    Description: Instance size for the prowler server

  LatestAmiId:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64"

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/28
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "vpc-${ProjectName}-${Environment}"

  # Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/28
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "subnet-public-${ProjectName}-${Environment}"

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "igw-${ProjectName}-${Environment}"

  # Attach Internet Gateway to VPC
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "rt-public-${ProjectName}-${Environment}"

  # Default Route
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Associate Route Table with Public Subnet
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  # Security Group
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "nsg-${ProjectName}-${Environment}"
      GroupDescription: Security group for Prowler EC2 instance
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref AllowedCIDR
          Description: HTTP access from specified CIDR
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: !Ref AllowedCIDR
          Description: Port 3000 access from specified CIDR
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: All outbound traffic
      Tags:
        - Key: Name
          Value: !Sub "nsg-${ProjectName}-${Environment}"

  # Custom IAM Policy
  CustomIAMPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "iampolicy-custom-${ProjectName}-${Environment}"
      Description: Custom policy for Prowler with additional read-only permissions
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowMoreReadOnly
            Effect: Allow
            Action:
              - account:Get*
              - appstream:Describe*
              - appstream:List*
              - backup:List*
              - backup:Get*
              - bedrock:List*
              - bedrock:Get*
              - cloudtrail:GetInsightSelectors
              - codeartifact:List*
              - codebuild:BatchGet*
              - codebuild:ListReportGroups
              - cognito-idp:GetUserPoolMfaConfig
              - dlm:Get*
              - drs:Describe*
              - ds:Get*
              - ds:Describe*
              - ds:List*
              - dynamodb:GetResourcePolicy
              - ec2:GetEbsEncryptionByDefault
              - ec2:GetSnapshotBlockPublicAccessState
              - ec2:GetInstanceMetadataDefaults
              - ecr:Describe*
              - ecr:GetRegistryScanningConfiguration
              - elasticfilesystem:DescribeBackupPolicy
              - glue:GetConnections
              - glue:GetSecurityConfiguration*
              - glue:SearchTables
              - glue:GetMLTransforms
              - lambda:GetFunction*
              - logs:FilterLogEvents
              - lightsail:GetRelationalDatabases
              - macie2:GetMacieSession
              - macie2:GetAutomatedDiscoveryConfiguration
              - s3:GetAccountPublicAccessBlock
              - shield:DescribeProtection
              - shield:GetSubscriptionState
              - securityhub:BatchImportFindings
              - securityhub:GetFindings
              - servicecatalog:Describe*
              - servicecatalog:List*
              - ssm:GetDocument
              - ssm-incidents:List*
              - states:ListTagsForResource
              - support:Describe*
              - tag:GetTagKeys
              - wellarchitected:List*
            Resource: "*"
          - Sid: AllowAPIGatewayReadOnly
            Effect: Allow
            Action:
              - apigateway:GET
            Resource:
              - "arn:*:apigateway:*::/restapis/*"
              - "arn:*:apigateway:*::/apis/*"

  # IAM Role for EC2
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "iamrole-${ProjectName}-${Environment}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Ref CustomIAMPolicy
      Tags:
        - Key: Name
          Value: !Sub "iamrole-${ProjectName}-${Environment}"

  # Instance Profile
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub "instanceprofile-${ProjectName}-${Environment}"
      Roles:
        - !Ref EC2Role

  # EC2 Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceSize
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref SecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -euxo pipefail

          # Update all installed packages
          dnf update -y

          # Install/Update AWS CLI v2
          # Amazon Linux 2023 typically has AWS CLI v2 available in its repositories.
          dnf install -y awscli

          # Install Python 3.12 and its pip module
          dnf install -y python3.12 python3.12-pip

          # Optional: Set Python 3.12 as the default 'python' command
          # Create symlinks for easier access
          ln -s /usr/bin/python3.12 /usr/bin/python
          ln -s /usr/bin/pip3.12 /usr/bin/pip

          # Install Prowler
          mkdir /usr/prowler
          cd /usr/prowler
          pip install prowler
          prowler aws

      Tags:
        - Key: Name
          Value: !Sub "ec2-${ProjectName}-${Environment}"

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VPC-ID"

  PublicSubnetId:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet-ID"

  SecurityGroupId:
    Description: Security Group ID
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroup-ID"

  EC2InstanceId:
    Description: EC2 Instance ID
    Value: !Ref EC2Instance
    Export:
      Name: !Sub "${AWS::StackName}-EC2Instance-ID"

  EC2PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-EC2Instance-PublicIP"

  EC2PublicDNS:
    Description: Public DNS name of the EC2 instance
    Value: !GetAtt EC2Instance.PublicDnsName
    Export:
      Name: !Sub "${AWS::StackName}-EC2Instance-PublicDNS"

  IAMRoleArn:
    Description: IAM Role ARN
    Value: !GetAtt EC2Role.Arn
    Export:
      Name: !Sub "${AWS::StackName}-IAMRole-ARN"
